#############################logger config#########################
#app name
easynode.app.name = MyApp
easynode.app.id = UNTITLED
easynode.app.key = EMPTY

#local address, uncomment this item when you have more than one network adapters
#easynode.local.ip = 192.168.0.56

#max event listeners of object, default value of Node.js is 11
easynode.events.maxListeners = 11

#depth of parsing object to JSON
easynode.inspect.depth = 2

#easynode servers
#koa http server
easynode.servers.koa-HttpServer.port = 5000
easynode.servers.koa-HttpServer.name = koa-HttpServer
easynode.servers.koa-HttpServer.rootRoot = www/
easynode.servers.koa-HttpServer.uploadDir = www/uploads/
easynode.servers.koa-HttpServer.uploadURIPrefix = /uploads/
easynode.servers.koa-HttpServer.upload.types = ^.*\.(?:png|jpg|bmp|gif|jpeg|txt|doc|xls|xlsx|ppt|pptx|pdf|zip|tar|gz|rar|swf|mp3|mp4|log|desktop)$
easynode.servers.koa-HttpServer.writeAccessLog = true
easynode.servers.koa-HttpServer.keys = EasyNode
easynode.servers.koa-HttpServer.404 = 404.html
#http proxy header indicated the real ip address of client
easynode.servers.koa-HttpServer.proxyIPHeader = x-forwarded-for
#启动时自动生成nginx配置文件etc/nginx.conf
easynode.servers.koa-HttpServer.generateNginxConfig = 1

#tcp server
easynode.servers.tcpServer.port = 6000
easynode.servers.tcpServer.name = tcpServer
easynode.servers.tcpServer.socketTimeout = 300000



#EasyNode action context
easynode.mvc.action.context.cache.support = true
#memcached or redis
easynode.mvc.action.context.cache.type = memcached
easynode.mvc.action.context.cache.host = 127.0.0.1
easynode.mvc.action.context.cache.port = 11211
easynode.mvc.action.context.cache.db = redis_only
easynode.mvc.action.context.cache.pwd = redis_only

#model action proxy
easynode.framework.mvc.model.action.createName = C
easynode.framework.mvc.model.action.readName = R
easynode.framework.mvc.model.action.updateName = U
easynode.framework.mvc.model.action.delName = D
easynode.framework.mvc.model.action.listName = L

#EasyNode default routes config
#access json api via http://localhost:5000/json?m=m&a=a&param=1
easynode.servers.koa-HttpServer.routes.jsonAPI.uri = /json
easynode.servers.koa-HttpServer.routes.jsonAPI.moduleParamName = m
easynode.servers.koa-HttpServer.routes.jsonAPI.actionParamName = a
#access action api via http://localhost:5000/action/m/a?param=1
easynode.servers.koa-HttpServer.routes.action.uri = /action
easynode.servers.koa-HttpServer.routes.upload.enabled = true
easynode.servers.koa-HttpServer.routes.upload.uri = /upload
easynode.servers.koa-HttpServer.routes.view.uri = /v

#default identity field name of a table
easynode.framework.mvc.model.defaultIdFieldName = id
#default rows per page of querying a model
easynode.framework.mvc.model.defaultRPP = 20
#template directory of view
easynode.framework.mvc.view.dir = test/views/
easynode.framework.mvc.view.template.defaultEngine = mustache
#this is an important config item, it should be set to false on development mode, set to true on production mode
easynode.framework.mvc.view.template.enableCache = false


#database connection config
#low performance sql warning log
easynode.framework.db.execSQLWarning = 3000

#log file folder of EasyNode, relative to the home directory of EasyNode
easynode.logger.folder = logs
#global log level of EasyNode, used when appender's log level is not defined
easynode.logger.level=DEBUG
#appender list
easynode.logger.appenders=root,access

#easynode log level, file name, pattern, size(MB) and backups.
easynode.logger.appender.root.level=DEBUG
easynode.logger.appender.root.file = app.log
easynode.logger.appender.root.pattern=_yyyy-MM-dd
easynode.logger.appender.root.maxSize=1024
easynode.logger.appender.root.backup=100

easynode.logger.appender.access.level=DEBUG
easynode.logger.appender.access.file = access.log
easynode.logger.appender.access.pattern=_yyyy-MM-dd
easynode.logger.appender.access.maxSize=1024
easynode.logger.appender.access.backup=100